<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restaurant Matcher</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background: #f5f5f5;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .container {
            max-width: 600px;
            width: 100%;
            padding: 20px;
            margin: 0 auto;
        }

        .welcome-screen {
            text-align: center;
            padding: 20px;
        }

        .share-link {
            margin: 20px 0;
            padding: 10px;
            background: #f0f0f0;
            border-radius: 5px;
            word-break: break-all;
        }

        .participants {
            margin: 20px 0;
        }

        .card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: relative;
            touch-action: none;
            transform-origin: center;
            transition: transform 0.3s;
        }

        .card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 8px;
        }

        .card-content {
            margin-top: 15px;
        }

        .restaurant-name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .restaurant-details {
            color: #666;
            margin-bottom: 5px;
        }

        .match-popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
            text-align: center;
            display: none;
        }

        .match-popup.active {
            display: block;
        }

        .start-button {
            background: #00C2E8;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
        }

        .wolt-link {
            color: #00C2E8;
            text-decoration: none;
            margin-top: 15px;
            display: inline-block;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div id="welcomeScreen" class="welcome-screen">
            <h1>Restaurant Matcher</h1>
            <button id="startSession" class="start-button">Start New Session</button>
            <div id="shareLink" class="share-link hidden"></div>
            <div id="participants" class="participants hidden">
                <h3>Participants:</h3>
                <ul id="participantsList"></ul>
            </div>
        </div>

        <div id="swipeScreen" class="hidden">
            <div id="card" class="card">
                <img id="restaurantImage" src="/api/placeholder/400/200" alt="Restaurant">
                <div class="card-content">
                    <div id="restaurantName" class="restaurant-name"></div>
                    <div id="restaurantCuisine" class="restaurant-details"></div>
                    <div id="restaurantRating" class="restaurant-details"></div>
                    <div id="restaurantPrice" class="restaurant-details"></div>
                </div>
            </div>
        </div>

        <div id="matchPopup" class="match-popup">
            <h2>Congratulations!</h2>
            <p>You now may order lunch</p>
            <a id="woltLink" class="wolt-link" target="_blank">Open in Wolt</a>
        </div>
    </div>

    <script>
        let ws;
        let sessionId;
        let currentRestaurant;
        let restaurants = [];
        let dragStartX;
        let currentX;
        let initialX;

        // Initialize the application
        document.getElementById('startSession').addEventListener('click', startNewSession);

        // Handle touch events for swiping
        const card = document.getElementById('card');
        card.addEventListener('touchstart', handleTouchStart);
        card.addEventListener('touchmove', handleTouchMove);
        card.addEventListener('touchend', handleTouchEnd);

        // Start new session
        async function startNewSession() {
            try {
                // Get user's location
                const position = await getCurrentPosition();
                
                // Connect to WebSocket server
                ws = new WebSocket('ws://your-websocket-server.com');
                
                ws.onopen = () => {
                    // Generate unique session ID
                    sessionId = generateSessionId();
                    
                    // Send initial session data
                    ws.send(JSON.stringify({
                        type: 'create_session',
                        sessionId: sessionId,
                        location: {
                            lat: position.coords.latitude,
                            lon: position.coords.longitude
                        }
                    }));
                };

                ws.onmessage = handleWebSocketMessage;

                // Show share link
                const shareLink = `${window.location.origin}?session=${sessionId}`;
                document.getElementById('shareLink').textContent = `Share this link: ${shareLink}`;
                document.getElementById('shareLink').classList.remove('hidden');
                document.getElementById('participants').classList.remove('hidden');

                // Fetch restaurants
                const response = await fetch(`https://wolt-restaurant-api.herokuapp.com/discovery?lat=${position.coords.latitude}&lon=${position.coords.longitude}`);
                restaurants = await response.json();
                
                // Start showing restaurants
                showNextRestaurant();
                
                // Hide welcome screen, show swipe screen
                document.getElementById('welcomeScreen').classList.add('hidden');
                document.getElementById('swipeScreen').classList.remove('hidden');
            } catch (error) {
                console.error('Error starting session:', error);
                alert('Error starting session. Please try again.');
            }
        }

        // Get current position using Geolocation API
        function getCurrentPosition() {
            return new Promise((resolve, reject) => {
                if (!navigator.geolocation) {
                    reject(new Error('Geolocation is not supported'));
                }
                navigator.geolocation.getCurrentPosition(resolve, reject);
            });
        }

        // Generate random session ID
        function generateSessionId() {
            return Math.random().toString(36).substring(2, 15);
        }

        // Handle WebSocket messages
        function handleWebSocketMessage(event) {
            const data = JSON.parse(event.data);
            
            switch (data.type) {
                case 'participant_joined':
                    updateParticipantsList(data.participants);
                    break;
                case 'restaurant_liked':
                    checkForMatch(data.restaurantId);
                    break;
                case 'match_found':
                    showMatch(data.restaurant);
                    break;
            }
        }

        // Update participants list
        function updateParticipantsList(participants) {
            const list = document.getElementById('participantsList');
            list.innerHTML = participants.map(p => `<li>${p}</li>`).join('');
        }

        // Show next restaurant
        function showNextRestaurant() {
            if (restaurants.length === 0) return;
            
            currentRestaurant = restaurants.shift();
            
            document.getElementById('restaurantImage').src = currentRestaurant.image_url || '/api/placeholder/400/200';
            document.getElementById('restaurantName').textContent = currentRestaurant.name;
            document.getElementById('restaurantCuisine').textContent = currentRestaurant.cuisine;
            document.getElementById('restaurantRating').textContent = `Rating: ${currentRestaurant.rating}`;
            document.getElementById('restaurantPrice').textContent = `Price: ${currentRestaurant.price_level}`;
        }

        // Touch event handlers
        function handleTouchStart(e) {
            initialX = e.touches[0].clientX;
            dragStartX = initialX;
            currentX = initialX;
        }

        function handleTouchMove(e) {
            if (!dragStartX) return;
            
            currentX = e.touches[0].clientX;
            const diffX = currentX - dragStartX;
            
            // Apply transform to card
            card.style.transform = `translateX(${diffX}px) rotate(${diffX * 0.1}deg)`;
        }

        function handleTouchEnd() {
            if (!dragStartX) return;
            
            const diffX = currentX - dragStartX;
            
            if (Math.abs(diffX) > 100) {
                // Swipe threshold met
                if (diffX > 0) {
                    // Swipe right - like
                    likeCurrentRestaurant();
                } else {
                    // Swipe left - dislike
                    showNextRestaurant();
                }
            }
            
            // Reset card position
            card.style.transform = '';
            dragStartX = null;
        }

        // Like current restaurant
        function likeCurrentRestaurant() {
            ws.send(JSON.stringify({
                type: 'like_restaurant',
                sessionId: sessionId,
                restaurantId: currentRestaurant.id
            }));
            
            showNextRestaurant();
        }

        // Check for restaurant match
        function checkForMatch(restaurantId) {
            // This will be handled by the server response
            // If all participants like the same restaurant, server will send 'match_found' event
        }

        // Show match popup
        function showMatch(restaurant) {
            document.getElementById('matchPopup').classList.add('active');
            document.getElementById('woltLink').href = `https://wolt.com/restaurant/${restaurant.id}`;
        }

        // Handle joining existing session
        window.onload = () => {
            const urlParams = new URLSearchParams(window.location.search);
            const sessionParam = urlParams.get('session');
            
            if (sessionParam) {
                sessionId = sessionParam;
                joinExistingSession(sessionId);
            }
        };

        // Join existing session
        async function joinExistingSession(sessionId) {
            try {
                const position = await getCurrentPosition();
                
                ws = new WebSocket('ws://your-websocket-server.com');
                
                ws.onopen = () => {
                    ws.send(JSON.stringify({
                        type: 'join_session',
                        sessionId: sessionId,
                        location: {
                            lat: position.coords.latitude,
                            lon: position.coords.longitude
                        }
                    }));
                };

                ws.onmessage = handleWebSocketMessage;
                
                // Hide welcome screen elements
                document.getElementById('startSession').classList.add('hidden');
                document.getElementById('participants').classList.remove('hidden');
                
                // Show swipe screen
                document.getElementById('swipeScreen').classList.remove('hidden');
            } catch (error) {
                console.error('Error joining session:', error);
                alert('Error joining session. Please try again.');
            }
        }
    </script>
</body>
</html>
